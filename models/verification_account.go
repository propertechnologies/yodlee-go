// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VerificationAccount VerificationAccount
// swagger:model VerificationAccount
type VerificationAccount struct {

	// account number
	AccountNumber string `json:"accountNumber,omitempty"`

	// account type
	// Enum: [SAVINGS CHECKING]
	AccountType string `json:"accountType,omitempty"`

	// bank transfer code
	BankTransferCode *VerificationBankTransferCode `json:"bankTransferCode,omitempty"`
}

// Validate validates this verification account
func (m *VerificationAccount) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccountType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBankTransferCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var verificationAccountTypeAccountTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SAVINGS","CHECKING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		verificationAccountTypeAccountTypePropEnum = append(verificationAccountTypeAccountTypePropEnum, v)
	}
}

const (

	// VerificationAccountAccountTypeSAVINGS captures enum value "SAVINGS"
	VerificationAccountAccountTypeSAVINGS string = "SAVINGS"

	// VerificationAccountAccountTypeCHECKING captures enum value "CHECKING"
	VerificationAccountAccountTypeCHECKING string = "CHECKING"
)

// prop value enum
func (m *VerificationAccount) validateAccountTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, verificationAccountTypeAccountTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *VerificationAccount) validateAccountType(formats strfmt.Registry) error {

	if swag.IsZero(m.AccountType) { // not required
		return nil
	}

	// value enum
	if err := m.validateAccountTypeEnum("accountType", "body", m.AccountType); err != nil {
		return err
	}

	return nil
}

func (m *VerificationAccount) validateBankTransferCode(formats strfmt.Registry) error {

	if swag.IsZero(m.BankTransferCode) { // not required
		return nil
	}

	if m.BankTransferCode != nil {
		if err := m.BankTransferCode.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("bankTransferCode")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *VerificationAccount) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VerificationAccount) UnmarshalBinary(b []byte) error {
	var res VerificationAccount
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
