// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// Security Security
// swagger:model Security
type Security struct {

	// The method in which interest is accrued or earned.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	AccrualMethod string `json:"accrualMethod,omitempty"`

	// Agency factor of the security.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	AgencyFactor float64 `json:"agencyFactor,omitempty"`

	// Next call date of the security.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	CallDate string `json:"callDate,omitempty"`

	// Next call price of the security.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	CallPrice float64 `json:"callPrice,omitempty"`

	// cdsc fund flag of the security.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	CdscFundFlag *bool `json:"cdscFundFlag,omitempty"`

	// <b>true</b>:Closed for all investors , <b>false</b>: Open to all investors.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	ClosedFlag *bool `json:"closedFlag,omitempty"`

	// A CUSIP is a nine-character alphanumeric code that identifies a North American financial security for the purposes of facilitating clearing and settlement of trades.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	Cusip string `json:"cusip,omitempty"`

	// The description (name) of the security. For example, Cisco Systems.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	Description string `json:"description,omitempty"`

	// Flag indicating federal taxable.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	FederalTaxable *bool `json:"federalTaxable,omitempty"`

	// <b>1</b>- indicates Eligible,<b>0</b>- indicates firm is not eligible.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	FirmEligible string `json:"firmEligible,omitempty"`

	// First coupon date of security.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	FirstCouponDate string `json:"firstCouponDate,omitempty"`

	// Coupon Frequency.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	Frequency int32 `json:"frequency,omitempty"`

	// Mutual Fund Family Name.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	FundFamily string `json:"fundFamily,omitempty"`

	// GICS Sector is a categorization the S&P assigns to all publically traded companies. <br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	GicsSector string `json:"gicsSector,omitempty"`

	// The unique identifier of the security.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	ID int64 `json:"id,omitempty"`

	// ISO 4217 currency code indicating income currency of the security.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	IncomeCurrency string `json:"incomeCurrency,omitempty"`

	// The rate of interest paid annually, expressed as a percentage of the bond's par or face value.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	InterestRate float64 `json:"interestRate,omitempty"`

	// Indicates whether the security is a dummy security.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	IsDummySecurity *bool `json:"isDummySecurity,omitempty"`

	// Flag indicating a dummy security.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	IsEnvestnetDummySecurity *bool `json:"isEnvestnetDummySecurity,omitempty"`

	// Indicates whether the security is a simulated security.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	IsSyntheticSecurity *bool `json:"isSyntheticSecurity,omitempty"`

	// The International Securities Identification Number (ISIN) is used worldwide to identify specific securities. It is equivalent to CUSIP for international markets.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	Isin string `json:"isin,omitempty"`

	// Issue date of the security.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	IssueDate string `json:"issueDate,omitempty"`

	// Price units corresponding to the security style. This is used to derive actual price of the security from market value.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	IssueTypeMultiplier float64 `json:"issueTypeMultiplier,omitempty"`

	// Last coupon date of security.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	LastCouponDate string `json:"lastCouponDate,omitempty"`

	// The last updated date of the security.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	LastModifiedDate string `json:"lastModifiedDate,omitempty"`

	// Maturity date of the security.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	MaturityDate string `json:"maturityDate,omitempty"`

	// Minimum purchase of security.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	MinimumPurchase int32 `json:"minimumPurchase,omitempty"`

	// Unique identifier for Moody rating on Envestnet platform.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	MoodyRating string `json:"moodyRating,omitempty"`

	// Unique identifier for S&P rating on Envestnet platform.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	SAndPRating string `json:"sAndPRating,omitempty"`

	// Identifier of the sector to which the security belongs to.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	Sector string `json:"sector,omitempty"`

	// The Stock Exchange Daily Official List (SEDOL) is a set of security identifiers used in the United Kingdom and Ireland for clearing purposes.<br><b>Note</b>: The SEDOL field is only applicable to the trade related transactions.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	Sedol string `json:"sedol,omitempty"`

	// Share class of the security.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	ShareClass string `json:"shareClass,omitempty"`

	// The state in which the security is taxed.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	StateTaxable *bool `json:"stateTaxable,omitempty"`

	// Classification of the style for the security.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	Style string `json:"style,omitempty"`

	// GICS sector ID to which the security belongs to.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	SubSector string `json:"subSector,omitempty"`

	// ISO 4217 currency code indicating trading currency of the security.<br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	TradeCurrencyCode string `json:"tradeCurrencyCode,omitempty"`

	// Indicates the type of security like stocks, mutual fund, etc. <br><br><b>Applicable containers</b>: investment<br>
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this security
func (m *Security) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Security) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Security) UnmarshalBinary(b []byte) error {
	var res Security
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
