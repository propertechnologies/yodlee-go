// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// ProviderAccountPreferences ProviderAccountPreferences
// swagger:model ProviderAccountPreferences
type ProviderAccountPreferences struct {

	// Indicates if auto-refreshes have to be triggered for the provider account.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts?include=preferences</li><li>GET providerAccounts/{providerAccountId}?include=preferences</li></ul>
	IsAutoRefreshEnabled bool `json:"isAutoRefreshEnabled,omitempty"`

	// Indicates if the updates to the provider account should be part of the data extracts event notification or the data extract data retrieval service.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts?include=preferences</li><li>GET providerAccounts/{providerAccountId}?include=preferences</li></ul>
	IsDataExtractsEnabled bool `json:"isDataExtractsEnabled,omitempty"`

	// The open banking providerAccount with which the userâ€™s credential-based providerAccount is linked..Additional Details: This field is relevant to the Open Banking supported data providers, a feature that is currently available only in the UK region.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>GET providerAccounts/{providerAccountId}</li></ul>
	LinkedProviderAccountID int64 `json:"linkedProviderAccountId,omitempty"`
}

// Validate validates this provider account preferences
func (m *ProviderAccountPreferences) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProviderAccountPreferences) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProviderAccountPreferences) UnmarshalBinary(b []byte) error {
	var res ProviderAccountPreferences
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
