// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DerivedCategorySummaryDetails DerivedCategorySummaryDetails
// swagger:model DerivedCategorySummaryDetails
type DerivedCategorySummaryDetails struct {

	// Total of credit transaction amounts that had occured on the date.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>
	// Read Only: true
	CreditTotal *Money `json:"creditTotal,omitempty"`

	// Date on which the credit and debit transactions had occured.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>
	// Read Only: true
	Date string `json:"date,omitempty"`

	// Total of debit transaction amounts that had occured on the date.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>
	// Read Only: true
	DebitTotal *Money `json:"debitTotal,omitempty"`
}

// Validate validates this derived category summary details
func (m *DerivedCategorySummaryDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreditTotal(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDebitTotal(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DerivedCategorySummaryDetails) validateCreditTotal(formats strfmt.Registry) error {

	if swag.IsZero(m.CreditTotal) { // not required
		return nil
	}

	if m.CreditTotal != nil {
		if err := m.CreditTotal.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("creditTotal")
			}
			return err
		}
	}

	return nil
}

func (m *DerivedCategorySummaryDetails) validateDebitTotal(formats strfmt.Registry) error {

	if swag.IsZero(m.DebitTotal) { // not required
		return nil
	}

	if m.DebitTotal != nil {
		if err := m.DebitTotal.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("debitTotal")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DerivedCategorySummaryDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DerivedCategorySummaryDetails) UnmarshalBinary(b []byte) error {
	var res DerivedCategorySummaryDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
