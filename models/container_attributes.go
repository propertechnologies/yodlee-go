// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ContainerAttributes ContainerAttributes
// swagger:model ContainerAttributes
type ContainerAttributes struct {

	// b a n k
	BANK *TransactionDays `json:"BANK,omitempty"`

	// c r e d i t c a r d
	CREDITCARD *TransactionDays `json:"CREDITCARD,omitempty"`

	// i n s u r a n c e
	INSURANCE *TransactionDays `json:"INSURANCE,omitempty"`

	// i n v e s t m e n t
	INVESTMENT *TransactionDays `json:"INVESTMENT,omitempty"`

	// l o a n
	LOAN *TransactionDays `json:"LOAN,omitempty"`
}

// Validate validates this container attributes
func (m *ContainerAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBANK(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCREDITCARD(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateINSURANCE(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateINVESTMENT(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLOAN(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ContainerAttributes) validateBANK(formats strfmt.Registry) error {

	if swag.IsZero(m.BANK) { // not required
		return nil
	}

	if m.BANK != nil {
		if err := m.BANK.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("BANK")
			}
			return err
		}
	}

	return nil
}

func (m *ContainerAttributes) validateCREDITCARD(formats strfmt.Registry) error {

	if swag.IsZero(m.CREDITCARD) { // not required
		return nil
	}

	if m.CREDITCARD != nil {
		if err := m.CREDITCARD.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("CREDITCARD")
			}
			return err
		}
	}

	return nil
}

func (m *ContainerAttributes) validateINSURANCE(formats strfmt.Registry) error {

	if swag.IsZero(m.INSURANCE) { // not required
		return nil
	}

	if m.INSURANCE != nil {
		if err := m.INSURANCE.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("INSURANCE")
			}
			return err
		}
	}

	return nil
}

func (m *ContainerAttributes) validateINVESTMENT(formats strfmt.Registry) error {

	if swag.IsZero(m.INVESTMENT) { // not required
		return nil
	}

	if m.INVESTMENT != nil {
		if err := m.INVESTMENT.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("INVESTMENT")
			}
			return err
		}
	}

	return nil
}

func (m *ContainerAttributes) validateLOAN(formats strfmt.Registry) error {

	if swag.IsZero(m.LOAN) { // not required
		return nil
	}

	if m.LOAN != nil {
		if err := m.LOAN.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("LOAN")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ContainerAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ContainerAttributes) UnmarshalBinary(b []byte) error {
	var res ContainerAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
