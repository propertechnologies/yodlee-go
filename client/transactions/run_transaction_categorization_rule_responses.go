// Code generated by go-swagger; DO NOT EDIT.

package transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/propertechnologies/yodlee-go/models"
)

// RunTransactionCategorizationRuleReader is a Reader for the RunTransactionCategorizationRule structure.
type RunTransactionCategorizationRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RunTransactionCategorizationRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRunTransactionCategorizationRuleNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRunTransactionCategorizationRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRunTransactionCategorizationRuleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRunTransactionCategorizationRuleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRunTransactionCategorizationRuleNoContent creates a RunTransactionCategorizationRuleNoContent with default headers values
func NewRunTransactionCategorizationRuleNoContent() *RunTransactionCategorizationRuleNoContent {
	return &RunTransactionCategorizationRuleNoContent{}
}

/*RunTransactionCategorizationRuleNoContent handles this case with default header values.

Run Successfully
*/
type RunTransactionCategorizationRuleNoContent struct {
}

func (o *RunTransactionCategorizationRuleNoContent) Error() string {
	return fmt.Sprintf("[POST /transactions/categories/rules/{ruleId}][%d] runTransactionCategorizationRuleNoContent ", 204)
}

func (o *RunTransactionCategorizationRuleNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRunTransactionCategorizationRuleBadRequest creates a RunTransactionCategorizationRuleBadRequest with default headers values
func NewRunTransactionCategorizationRuleBadRequest() *RunTransactionCategorizationRuleBadRequest {
	return &RunTransactionCategorizationRuleBadRequest{}
}

/*RunTransactionCategorizationRuleBadRequest handles this case with default header values.

Y800 : Invalid value for ruleId<br>Y400 : Categorization already in progress
*/
type RunTransactionCategorizationRuleBadRequest struct {
	Payload *models.YodleeError
}

func (o *RunTransactionCategorizationRuleBadRequest) Error() string {
	return fmt.Sprintf("[POST /transactions/categories/rules/{ruleId}][%d] runTransactionCategorizationRuleBadRequest  %+v", 400, o.Payload)
}

func (o *RunTransactionCategorizationRuleBadRequest) GetPayload() *models.YodleeError {
	return o.Payload
}

func (o *RunTransactionCategorizationRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.YodleeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunTransactionCategorizationRuleUnauthorized creates a RunTransactionCategorizationRuleUnauthorized with default headers values
func NewRunTransactionCategorizationRuleUnauthorized() *RunTransactionCategorizationRuleUnauthorized {
	return &RunTransactionCategorizationRuleUnauthorized{}
}

/*RunTransactionCategorizationRuleUnauthorized handles this case with default header values.

Unauthorized
*/
type RunTransactionCategorizationRuleUnauthorized struct {
}

func (o *RunTransactionCategorizationRuleUnauthorized) Error() string {
	return fmt.Sprintf("[POST /transactions/categories/rules/{ruleId}][%d] runTransactionCategorizationRuleUnauthorized ", 401)
}

func (o *RunTransactionCategorizationRuleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRunTransactionCategorizationRuleNotFound creates a RunTransactionCategorizationRuleNotFound with default headers values
func NewRunTransactionCategorizationRuleNotFound() *RunTransactionCategorizationRuleNotFound {
	return &RunTransactionCategorizationRuleNotFound{}
}

/*RunTransactionCategorizationRuleNotFound handles this case with default header values.

Not Found
*/
type RunTransactionCategorizationRuleNotFound struct {
}

func (o *RunTransactionCategorizationRuleNotFound) Error() string {
	return fmt.Sprintf("[POST /transactions/categories/rules/{ruleId}][%d] runTransactionCategorizationRuleNotFound ", 404)
}

func (o *RunTransactionCategorizationRuleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
