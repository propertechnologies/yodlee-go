// Code generated by go-swagger; DO NOT EDIT.

package transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/propertechnologies/yodlee-go/models"
)

// UpdateTransactionCategorizationRuleReader is a Reader for the UpdateTransactionCategorizationRule structure.
type UpdateTransactionCategorizationRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateTransactionCategorizationRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateTransactionCategorizationRuleNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateTransactionCategorizationRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateTransactionCategorizationRuleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateTransactionCategorizationRuleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateTransactionCategorizationRuleNoContent creates a UpdateTransactionCategorizationRuleNoContent with default headers values
func NewUpdateTransactionCategorizationRuleNoContent() *UpdateTransactionCategorizationRuleNoContent {
	return &UpdateTransactionCategorizationRuleNoContent{}
}

/*UpdateTransactionCategorizationRuleNoContent handles this case with default header values.

Updated Successfully
*/
type UpdateTransactionCategorizationRuleNoContent struct {
}

func (o *UpdateTransactionCategorizationRuleNoContent) Error() string {
	return fmt.Sprintf("[PUT /transactions/categories/rules/{ruleId}][%d] updateTransactionCategorizationRuleNoContent ", 204)
}

func (o *UpdateTransactionCategorizationRuleNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTransactionCategorizationRuleBadRequest creates a UpdateTransactionCategorizationRuleBadRequest with default headers values
func NewUpdateTransactionCategorizationRuleBadRequest() *UpdateTransactionCategorizationRuleBadRequest {
	return &UpdateTransactionCategorizationRuleBadRequest{}
}

/*UpdateTransactionCategorizationRuleBadRequest handles this case with default header values.

Y800 : Invalid value for ruleId<br>Y806 : Invalid input
*/
type UpdateTransactionCategorizationRuleBadRequest struct {
	Payload *models.YodleeError
}

func (o *UpdateTransactionCategorizationRuleBadRequest) Error() string {
	return fmt.Sprintf("[PUT /transactions/categories/rules/{ruleId}][%d] updateTransactionCategorizationRuleBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateTransactionCategorizationRuleBadRequest) GetPayload() *models.YodleeError {
	return o.Payload
}

func (o *UpdateTransactionCategorizationRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.YodleeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTransactionCategorizationRuleUnauthorized creates a UpdateTransactionCategorizationRuleUnauthorized with default headers values
func NewUpdateTransactionCategorizationRuleUnauthorized() *UpdateTransactionCategorizationRuleUnauthorized {
	return &UpdateTransactionCategorizationRuleUnauthorized{}
}

/*UpdateTransactionCategorizationRuleUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateTransactionCategorizationRuleUnauthorized struct {
}

func (o *UpdateTransactionCategorizationRuleUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /transactions/categories/rules/{ruleId}][%d] updateTransactionCategorizationRuleUnauthorized ", 401)
}

func (o *UpdateTransactionCategorizationRuleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTransactionCategorizationRuleNotFound creates a UpdateTransactionCategorizationRuleNotFound with default headers values
func NewUpdateTransactionCategorizationRuleNotFound() *UpdateTransactionCategorizationRuleNotFound {
	return &UpdateTransactionCategorizationRuleNotFound{}
}

/*UpdateTransactionCategorizationRuleNotFound handles this case with default header values.

Not Found
*/
type UpdateTransactionCategorizationRuleNotFound struct {
}

func (o *UpdateTransactionCategorizationRuleNotFound) Error() string {
	return fmt.Sprintf("[PUT /transactions/categories/rules/{ruleId}][%d] updateTransactionCategorizationRuleNotFound ", 404)
}

func (o *UpdateTransactionCategorizationRuleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
