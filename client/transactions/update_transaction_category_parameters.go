// Code generated by go-swagger; DO NOT EDIT.

package transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "yodlee-golang-client/models"
)

// NewUpdateTransactionCategoryParams creates a new UpdateTransactionCategoryParams object
// with the default values initialized.
func NewUpdateTransactionCategoryParams() *UpdateTransactionCategoryParams {
	var ()
	return &UpdateTransactionCategoryParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateTransactionCategoryParamsWithTimeout creates a new UpdateTransactionCategoryParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateTransactionCategoryParamsWithTimeout(timeout time.Duration) *UpdateTransactionCategoryParams {
	var ()
	return &UpdateTransactionCategoryParams{

		timeout: timeout,
	}
}

// NewUpdateTransactionCategoryParamsWithContext creates a new UpdateTransactionCategoryParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateTransactionCategoryParamsWithContext(ctx context.Context) *UpdateTransactionCategoryParams {
	var ()
	return &UpdateTransactionCategoryParams{

		Context: ctx,
	}
}

// NewUpdateTransactionCategoryParamsWithHTTPClient creates a new UpdateTransactionCategoryParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateTransactionCategoryParamsWithHTTPClient(client *http.Client) *UpdateTransactionCategoryParams {
	var ()
	return &UpdateTransactionCategoryParams{
		HTTPClient: client,
	}
}

/*UpdateTransactionCategoryParams contains all the parameters to send to the API endpoint
for the update transaction category operation typically these are written to a http.Request
*/
type UpdateTransactionCategoryParams struct {

	/*UpdateCategoryRequest
	  updateCategoryRequest

	*/
	UpdateCategoryRequest *models.UpdateCategoryRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update transaction category params
func (o *UpdateTransactionCategoryParams) WithTimeout(timeout time.Duration) *UpdateTransactionCategoryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update transaction category params
func (o *UpdateTransactionCategoryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update transaction category params
func (o *UpdateTransactionCategoryParams) WithContext(ctx context.Context) *UpdateTransactionCategoryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update transaction category params
func (o *UpdateTransactionCategoryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update transaction category params
func (o *UpdateTransactionCategoryParams) WithHTTPClient(client *http.Client) *UpdateTransactionCategoryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update transaction category params
func (o *UpdateTransactionCategoryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUpdateCategoryRequest adds the updateCategoryRequest to the update transaction category params
func (o *UpdateTransactionCategoryParams) WithUpdateCategoryRequest(updateCategoryRequest *models.UpdateCategoryRequest) *UpdateTransactionCategoryParams {
	o.SetUpdateCategoryRequest(updateCategoryRequest)
	return o
}

// SetUpdateCategoryRequest adds the updateCategoryRequest to the update transaction category params
func (o *UpdateTransactionCategoryParams) SetUpdateCategoryRequest(updateCategoryRequest *models.UpdateCategoryRequest) {
	o.UpdateCategoryRequest = updateCategoryRequest
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateTransactionCategoryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.UpdateCategoryRequest != nil {
		if err := r.SetBodyParam(o.UpdateCategoryRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
