// Code generated by go-swagger; DO NOT EDIT.

package transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/propertechnologies/yodlee-go/models"
)

// UpdateTransactionReader is a Reader for the UpdateTransaction structure.
type UpdateTransactionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateTransactionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateTransactionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateTransactionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateTransactionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateTransactionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateTransactionNoContent creates a UpdateTransactionNoContent with default headers values
func NewUpdateTransactionNoContent() *UpdateTransactionNoContent {
	return &UpdateTransactionNoContent{}
}

/*UpdateTransactionNoContent handles this case with default header values.

Updated Successfully
*/
type UpdateTransactionNoContent struct {
}

func (o *UpdateTransactionNoContent) Error() string {
	return fmt.Sprintf("[PUT /transactions/{transactionId}][%d] updateTransactionNoContent ", 204)
}

func (o *UpdateTransactionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTransactionBadRequest creates a UpdateTransactionBadRequest with default headers values
func NewUpdateTransactionBadRequest() *UpdateTransactionBadRequest {
	return &UpdateTransactionBadRequest{}
}

/*UpdateTransactionBadRequest handles this case with default header values.

Y812 : Required field -container missing in the transactionParam parameter input<br>Y800 : Invalid value for transactionId<br>Y800 : Invalid value for categoryId
*/
type UpdateTransactionBadRequest struct {
	Payload *models.YodleeError
}

func (o *UpdateTransactionBadRequest) Error() string {
	return fmt.Sprintf("[PUT /transactions/{transactionId}][%d] updateTransactionBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateTransactionBadRequest) GetPayload() *models.YodleeError {
	return o.Payload
}

func (o *UpdateTransactionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.YodleeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTransactionUnauthorized creates a UpdateTransactionUnauthorized with default headers values
func NewUpdateTransactionUnauthorized() *UpdateTransactionUnauthorized {
	return &UpdateTransactionUnauthorized{}
}

/*UpdateTransactionUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateTransactionUnauthorized struct {
}

func (o *UpdateTransactionUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /transactions/{transactionId}][%d] updateTransactionUnauthorized ", 401)
}

func (o *UpdateTransactionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTransactionNotFound creates a UpdateTransactionNotFound with default headers values
func NewUpdateTransactionNotFound() *UpdateTransactionNotFound {
	return &UpdateTransactionNotFound{}
}

/*UpdateTransactionNotFound handles this case with default header values.

Not Found
*/
type UpdateTransactionNotFound struct {
}

func (o *UpdateTransactionNotFound) Error() string {
	return fmt.Sprintf("[PUT /transactions/{transactionId}][%d] updateTransactionNotFound ", 404)
}

func (o *UpdateTransactionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
