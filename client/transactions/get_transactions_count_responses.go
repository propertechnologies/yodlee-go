// Code generated by go-swagger; DO NOT EDIT.

package transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/propertechnologies/yodlee-go/models"
)

// GetTransactionsCountReader is a Reader for the GetTransactionsCount structure.
type GetTransactionsCountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTransactionsCountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTransactionsCountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTransactionsCountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTransactionsCountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTransactionsCountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTransactionsCountOK creates a GetTransactionsCountOK with default headers values
func NewGetTransactionsCountOK() *GetTransactionsCountOK {
	return &GetTransactionsCountOK{}
}

/*GetTransactionsCountOK handles this case with default header values.

OK
*/
type GetTransactionsCountOK struct {
	Payload *models.TransactionCountResponse
}

func (o *GetTransactionsCountOK) Error() string {
	return fmt.Sprintf("[GET /transactions/count][%d] getTransactionsCountOK  %+v", 200, o.Payload)
}

func (o *GetTransactionsCountOK) GetPayload() *models.TransactionCountResponse {
	return o.Payload
}

func (o *GetTransactionsCountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TransactionCountResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTransactionsCountBadRequest creates a GetTransactionsCountBadRequest with default headers values
func NewGetTransactionsCountBadRequest() *GetTransactionsCountBadRequest {
	return &GetTransactionsCountBadRequest{}
}

/*GetTransactionsCountBadRequest handles this case with default header values.

Y800 : Invalid value for detailCategoryId<br>Y848 : detailCategoryId cannot be provided as input, as the detailedCategory feature is not enabled<br>Y823 : detailCategoryId is not applicable for containers other than bank and card<br>Y824 : The maximum number of detailCategoryIds permitted is 100<br>
*/
type GetTransactionsCountBadRequest struct {
	Payload *models.YodleeError
}

func (o *GetTransactionsCountBadRequest) Error() string {
	return fmt.Sprintf("[GET /transactions/count][%d] getTransactionsCountBadRequest  %+v", 400, o.Payload)
}

func (o *GetTransactionsCountBadRequest) GetPayload() *models.YodleeError {
	return o.Payload
}

func (o *GetTransactionsCountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.YodleeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTransactionsCountUnauthorized creates a GetTransactionsCountUnauthorized with default headers values
func NewGetTransactionsCountUnauthorized() *GetTransactionsCountUnauthorized {
	return &GetTransactionsCountUnauthorized{}
}

/*GetTransactionsCountUnauthorized handles this case with default header values.

Unauthorized
*/
type GetTransactionsCountUnauthorized struct {
}

func (o *GetTransactionsCountUnauthorized) Error() string {
	return fmt.Sprintf("[GET /transactions/count][%d] getTransactionsCountUnauthorized ", 401)
}

func (o *GetTransactionsCountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTransactionsCountNotFound creates a GetTransactionsCountNotFound with default headers values
func NewGetTransactionsCountNotFound() *GetTransactionsCountNotFound {
	return &GetTransactionsCountNotFound{}
}

/*GetTransactionsCountNotFound handles this case with default header values.

Not Found
*/
type GetTransactionsCountNotFound struct {
}

func (o *GetTransactionsCountNotFound) Error() string {
	return fmt.Sprintf("[GET /transactions/count][%d] getTransactionsCountNotFound ", 404)
}

func (o *GetTransactionsCountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
