// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/propertechnologies/yodlee-go/models"
)

// GetHistoricalBalancesReader is a Reader for the GetHistoricalBalances structure.
type GetHistoricalBalancesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHistoricalBalancesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHistoricalBalancesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetHistoricalBalancesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetHistoricalBalancesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetHistoricalBalancesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetHistoricalBalancesOK creates a GetHistoricalBalancesOK with default headers values
func NewGetHistoricalBalancesOK() *GetHistoricalBalancesOK {
	return &GetHistoricalBalancesOK{}
}

/*GetHistoricalBalancesOK handles this case with default header values.

OK
*/
type GetHistoricalBalancesOK struct {
	Payload *models.AccountHistoricalBalancesResponse
}

func (o *GetHistoricalBalancesOK) Error() string {
	return fmt.Sprintf("[GET /accounts/historicalBalances][%d] getHistoricalBalancesOK  %+v", 200, o.Payload)
}

func (o *GetHistoricalBalancesOK) GetPayload() *models.AccountHistoricalBalancesResponse {
	return o.Payload
}

func (o *GetHistoricalBalancesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountHistoricalBalancesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHistoricalBalancesBadRequest creates a GetHistoricalBalancesBadRequest with default headers values
func NewGetHistoricalBalancesBadRequest() *GetHistoricalBalancesBadRequest {
	return &GetHistoricalBalancesBadRequest{}
}

/*GetHistoricalBalancesBadRequest handles this case with default header values.

Y800 : Invalid value for accountId<br>Y800 : Invalid value for fromDate<br>Y800 : Invalid value for toDate<br>Y809 : Invalid date range<br>Y800 : Invalid value for interval<br>Y802 : Future date not allowed
*/
type GetHistoricalBalancesBadRequest struct {
	Payload *models.YodleeError
}

func (o *GetHistoricalBalancesBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts/historicalBalances][%d] getHistoricalBalancesBadRequest  %+v", 400, o.Payload)
}

func (o *GetHistoricalBalancesBadRequest) GetPayload() *models.YodleeError {
	return o.Payload
}

func (o *GetHistoricalBalancesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.YodleeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHistoricalBalancesUnauthorized creates a GetHistoricalBalancesUnauthorized with default headers values
func NewGetHistoricalBalancesUnauthorized() *GetHistoricalBalancesUnauthorized {
	return &GetHistoricalBalancesUnauthorized{}
}

/*GetHistoricalBalancesUnauthorized handles this case with default header values.

Unauthorized
*/
type GetHistoricalBalancesUnauthorized struct {
}

func (o *GetHistoricalBalancesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts/historicalBalances][%d] getHistoricalBalancesUnauthorized ", 401)
}

func (o *GetHistoricalBalancesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHistoricalBalancesNotFound creates a GetHistoricalBalancesNotFound with default headers values
func NewGetHistoricalBalancesNotFound() *GetHistoricalBalancesNotFound {
	return &GetHistoricalBalancesNotFound{}
}

/*GetHistoricalBalancesNotFound handles this case with default header values.

Not Found
*/
type GetHistoricalBalancesNotFound struct {
}

func (o *GetHistoricalBalancesNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts/historicalBalances][%d] getHistoricalBalancesNotFound ", 404)
}

func (o *GetHistoricalBalancesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
