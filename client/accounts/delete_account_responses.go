// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/propertechnologies/yodlee-go/models"
)

// DeleteAccountReader is a Reader for the DeleteAccount structure.
type DeleteAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteAccountNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteAccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteAccountNoContent creates a DeleteAccountNoContent with default headers values
func NewDeleteAccountNoContent() *DeleteAccountNoContent {
	return &DeleteAccountNoContent{}
}

/*DeleteAccountNoContent handles this case with default header values.

OK
*/
type DeleteAccountNoContent struct {
}

func (o *DeleteAccountNoContent) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{accountId}][%d] deleteAccountNoContent ", 204)
}

func (o *DeleteAccountNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAccountBadRequest creates a DeleteAccountBadRequest with default headers values
func NewDeleteAccountBadRequest() *DeleteAccountBadRequest {
	return &DeleteAccountBadRequest{}
}

/*DeleteAccountBadRequest handles this case with default header values.

Y800 : Invalid value for accountId
*/
type DeleteAccountBadRequest struct {
	Payload *models.YodleeError
}

func (o *DeleteAccountBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{accountId}][%d] deleteAccountBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAccountBadRequest) GetPayload() *models.YodleeError {
	return o.Payload
}

func (o *DeleteAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.YodleeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccountUnauthorized creates a DeleteAccountUnauthorized with default headers values
func NewDeleteAccountUnauthorized() *DeleteAccountUnauthorized {
	return &DeleteAccountUnauthorized{}
}

/*DeleteAccountUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteAccountUnauthorized struct {
}

func (o *DeleteAccountUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{accountId}][%d] deleteAccountUnauthorized ", 401)
}

func (o *DeleteAccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAccountNotFound creates a DeleteAccountNotFound with default headers values
func NewDeleteAccountNotFound() *DeleteAccountNotFound {
	return &DeleteAccountNotFound{}
}

/*DeleteAccountNotFound handles this case with default header values.

Not Found
*/
type DeleteAccountNotFound struct {
}

func (o *DeleteAccountNotFound) Error() string {
	return fmt.Sprintf("[DELETE /accounts/{accountId}][%d] deleteAccountNotFound ", 404)
}

func (o *DeleteAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
