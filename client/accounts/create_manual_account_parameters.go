// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "yodlee-golang-client/models"
)

// NewCreateManualAccountParams creates a new CreateManualAccountParams object
// with the default values initialized.
func NewCreateManualAccountParams() *CreateManualAccountParams {
	var ()
	return &CreateManualAccountParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateManualAccountParamsWithTimeout creates a new CreateManualAccountParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateManualAccountParamsWithTimeout(timeout time.Duration) *CreateManualAccountParams {
	var ()
	return &CreateManualAccountParams{

		timeout: timeout,
	}
}

// NewCreateManualAccountParamsWithContext creates a new CreateManualAccountParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateManualAccountParamsWithContext(ctx context.Context) *CreateManualAccountParams {
	var ()
	return &CreateManualAccountParams{

		Context: ctx,
	}
}

// NewCreateManualAccountParamsWithHTTPClient creates a new CreateManualAccountParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateManualAccountParamsWithHTTPClient(client *http.Client) *CreateManualAccountParams {
	var ()
	return &CreateManualAccountParams{
		HTTPClient: client,
	}
}

/*CreateManualAccountParams contains all the parameters to send to the API endpoint
for the create manual account operation typically these are written to a http.Request
*/
type CreateManualAccountParams struct {

	/*AccountParam
	  accountParam

	*/
	AccountParam *models.CreateAccountRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create manual account params
func (o *CreateManualAccountParams) WithTimeout(timeout time.Duration) *CreateManualAccountParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create manual account params
func (o *CreateManualAccountParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create manual account params
func (o *CreateManualAccountParams) WithContext(ctx context.Context) *CreateManualAccountParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create manual account params
func (o *CreateManualAccountParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create manual account params
func (o *CreateManualAccountParams) WithHTTPClient(client *http.Client) *CreateManualAccountParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create manual account params
func (o *CreateManualAccountParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountParam adds the accountParam to the create manual account params
func (o *CreateManualAccountParams) WithAccountParam(accountParam *models.CreateAccountRequest) *CreateManualAccountParams {
	o.SetAccountParam(accountParam)
	return o
}

// SetAccountParam adds the accountParam to the create manual account params
func (o *CreateManualAccountParams) SetAccountParam(accountParam *models.CreateAccountRequest) {
	o.AccountParam = accountParam
}

// WriteToRequest writes these params to a swagger request
func (o *CreateManualAccountParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccountParam != nil {
		if err := r.SetBodyParam(o.AccountParam); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
