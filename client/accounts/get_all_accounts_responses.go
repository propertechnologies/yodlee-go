// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "yodlee-golang-client/models"
)

// GetAllAccountsReader is a Reader for the GetAllAccounts structure.
type GetAllAccountsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllAccountsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllAccountsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllAccountsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAllAccountsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllAccountsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllAccountsOK creates a GetAllAccountsOK with default headers values
func NewGetAllAccountsOK() *GetAllAccountsOK {
	return &GetAllAccountsOK{}
}

/*GetAllAccountsOK handles this case with default header values.

OK
*/
type GetAllAccountsOK struct {
	Payload *models.AccountResponse
}

func (o *GetAllAccountsOK) Error() string {
	return fmt.Sprintf("[GET /accounts][%d] getAllAccountsOK  %+v", 200, o.Payload)
}

func (o *GetAllAccountsOK) GetPayload() *models.AccountResponse {
	return o.Payload
}

func (o *GetAllAccountsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllAccountsBadRequest creates a GetAllAccountsBadRequest with default headers values
func NewGetAllAccountsBadRequest() *GetAllAccountsBadRequest {
	return &GetAllAccountsBadRequest{}
}

/*GetAllAccountsBadRequest handles this case with default header values.

Y800 : Invalid value for status<br>Y800 : Invalid value for container<br>Y800 : Invalid value for providerAccountId<br>Y824 : The maximum number of accountIds permitted is 100
*/
type GetAllAccountsBadRequest struct {
	Payload *models.YodleeError
}

func (o *GetAllAccountsBadRequest) Error() string {
	return fmt.Sprintf("[GET /accounts][%d] getAllAccountsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAllAccountsBadRequest) GetPayload() *models.YodleeError {
	return o.Payload
}

func (o *GetAllAccountsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.YodleeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllAccountsUnauthorized creates a GetAllAccountsUnauthorized with default headers values
func NewGetAllAccountsUnauthorized() *GetAllAccountsUnauthorized {
	return &GetAllAccountsUnauthorized{}
}

/*GetAllAccountsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllAccountsUnauthorized struct {
}

func (o *GetAllAccountsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /accounts][%d] getAllAccountsUnauthorized ", 401)
}

func (o *GetAllAccountsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllAccountsNotFound creates a GetAllAccountsNotFound with default headers values
func NewGetAllAccountsNotFound() *GetAllAccountsNotFound {
	return &GetAllAccountsNotFound{}
}

/*GetAllAccountsNotFound handles this case with default header values.

Not Found
*/
type GetAllAccountsNotFound struct {
}

func (o *GetAllAccountsNotFound) Error() string {
	return fmt.Sprintf("[GET /accounts][%d] getAllAccountsNotFound ", 404)
}

func (o *GetAllAccountsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
