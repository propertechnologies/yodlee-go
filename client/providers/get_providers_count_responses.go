// Code generated by go-swagger; DO NOT EDIT.

package providers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/propertechnologies/yodlee-go/models"
)

// GetProvidersCountReader is a Reader for the GetProvidersCount structure.
type GetProvidersCountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProvidersCountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProvidersCountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetProvidersCountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetProvidersCountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetProvidersCountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetProvidersCountOK creates a GetProvidersCountOK with default headers values
func NewGetProvidersCountOK() *GetProvidersCountOK {
	return &GetProvidersCountOK{}
}

/*GetProvidersCountOK handles this case with default header values.

OK
*/
type GetProvidersCountOK struct {
	Payload *models.ProvidersCountResponse
}

func (o *GetProvidersCountOK) Error() string {
	return fmt.Sprintf("[GET /providers/count][%d] getProvidersCountOK  %+v", 200, o.Payload)
}

func (o *GetProvidersCountOK) GetPayload() *models.ProvidersCountResponse {
	return o.Payload
}

func (o *GetProvidersCountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProvidersCountResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProvidersCountBadRequest creates a GetProvidersCountBadRequest with default headers values
func NewGetProvidersCountBadRequest() *GetProvidersCountBadRequest {
	return &GetProvidersCountBadRequest{}
}

/*GetProvidersCountBadRequest handles this case with default header values.

Y800 : Invalid value for priority<br>Y800 : Invalid value for providerName<br>Y801 : Invalid length for a site search. The search string must have at least 1 character<br>Y800 : Invalid value for skip<br>Y804 : Permitted values of top between 1 - 500<br>Y821 : Dataset not supported<br>Y820 : The additionalDataSet is not supported for Get provider API
*/
type GetProvidersCountBadRequest struct {
	Payload *models.YodleeError
}

func (o *GetProvidersCountBadRequest) Error() string {
	return fmt.Sprintf("[GET /providers/count][%d] getProvidersCountBadRequest  %+v", 400, o.Payload)
}

func (o *GetProvidersCountBadRequest) GetPayload() *models.YodleeError {
	return o.Payload
}

func (o *GetProvidersCountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.YodleeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProvidersCountUnauthorized creates a GetProvidersCountUnauthorized with default headers values
func NewGetProvidersCountUnauthorized() *GetProvidersCountUnauthorized {
	return &GetProvidersCountUnauthorized{}
}

/*GetProvidersCountUnauthorized handles this case with default header values.

Unauthorized
*/
type GetProvidersCountUnauthorized struct {
}

func (o *GetProvidersCountUnauthorized) Error() string {
	return fmt.Sprintf("[GET /providers/count][%d] getProvidersCountUnauthorized ", 401)
}

func (o *GetProvidersCountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProvidersCountNotFound creates a GetProvidersCountNotFound with default headers values
func NewGetProvidersCountNotFound() *GetProvidersCountNotFound {
	return &GetProvidersCountNotFound{}
}

/*GetProvidersCountNotFound handles this case with default header values.

Not Found
*/
type GetProvidersCountNotFound struct {
}

func (o *GetProvidersCountNotFound) Error() string {
	return fmt.Sprintf("[GET /providers/count][%d] getProvidersCountNotFound ", 404)
}

func (o *GetProvidersCountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
