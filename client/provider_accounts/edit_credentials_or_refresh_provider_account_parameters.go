// Code generated by go-swagger; DO NOT EDIT.

package provider_accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/propertechnologies/yodlee-go/models"
)

// NewEditCredentialsOrRefreshProviderAccountParams creates a new EditCredentialsOrRefreshProviderAccountParams object
// with the default values initialized.
func NewEditCredentialsOrRefreshProviderAccountParams() *EditCredentialsOrRefreshProviderAccountParams {
	var ()
	return &EditCredentialsOrRefreshProviderAccountParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewEditCredentialsOrRefreshProviderAccountParamsWithTimeout creates a new EditCredentialsOrRefreshProviderAccountParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewEditCredentialsOrRefreshProviderAccountParamsWithTimeout(timeout time.Duration) *EditCredentialsOrRefreshProviderAccountParams {
	var ()
	return &EditCredentialsOrRefreshProviderAccountParams{

		timeout: timeout,
	}
}

// NewEditCredentialsOrRefreshProviderAccountParamsWithContext creates a new EditCredentialsOrRefreshProviderAccountParams object
// with the default values initialized, and the ability to set a context for a request
func NewEditCredentialsOrRefreshProviderAccountParamsWithContext(ctx context.Context) *EditCredentialsOrRefreshProviderAccountParams {
	var ()
	return &EditCredentialsOrRefreshProviderAccountParams{

		Context: ctx,
	}
}

// NewEditCredentialsOrRefreshProviderAccountParamsWithHTTPClient creates a new EditCredentialsOrRefreshProviderAccountParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewEditCredentialsOrRefreshProviderAccountParamsWithHTTPClient(client *http.Client) *EditCredentialsOrRefreshProviderAccountParams {
	var ()
	return &EditCredentialsOrRefreshProviderAccountParams{
		HTTPClient: client,
	}
}

/*EditCredentialsOrRefreshProviderAccountParams contains all the parameters to send to the API endpoint
for the edit credentials or refresh provider account operation typically these are written to a http.Request
*/
type EditCredentialsOrRefreshProviderAccountParams struct {

	/*ProviderAccountIds
	  comma separated providerAccountIds

	*/
	ProviderAccountIds string
	/*ProviderAccountRequest
	  loginForm or field entity

	*/
	ProviderAccountRequest *models.ProviderAccountRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the edit credentials or refresh provider account params
func (o *EditCredentialsOrRefreshProviderAccountParams) WithTimeout(timeout time.Duration) *EditCredentialsOrRefreshProviderAccountParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the edit credentials or refresh provider account params
func (o *EditCredentialsOrRefreshProviderAccountParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the edit credentials or refresh provider account params
func (o *EditCredentialsOrRefreshProviderAccountParams) WithContext(ctx context.Context) *EditCredentialsOrRefreshProviderAccountParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the edit credentials or refresh provider account params
func (o *EditCredentialsOrRefreshProviderAccountParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the edit credentials or refresh provider account params
func (o *EditCredentialsOrRefreshProviderAccountParams) WithHTTPClient(client *http.Client) *EditCredentialsOrRefreshProviderAccountParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the edit credentials or refresh provider account params
func (o *EditCredentialsOrRefreshProviderAccountParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProviderAccountIds adds the providerAccountIds to the edit credentials or refresh provider account params
func (o *EditCredentialsOrRefreshProviderAccountParams) WithProviderAccountIds(providerAccountIds string) *EditCredentialsOrRefreshProviderAccountParams {
	o.SetProviderAccountIds(providerAccountIds)
	return o
}

// SetProviderAccountIds adds the providerAccountIds to the edit credentials or refresh provider account params
func (o *EditCredentialsOrRefreshProviderAccountParams) SetProviderAccountIds(providerAccountIds string) {
	o.ProviderAccountIds = providerAccountIds
}

// WithProviderAccountRequest adds the providerAccountRequest to the edit credentials or refresh provider account params
func (o *EditCredentialsOrRefreshProviderAccountParams) WithProviderAccountRequest(providerAccountRequest *models.ProviderAccountRequest) *EditCredentialsOrRefreshProviderAccountParams {
	o.SetProviderAccountRequest(providerAccountRequest)
	return o
}

// SetProviderAccountRequest adds the providerAccountRequest to the edit credentials or refresh provider account params
func (o *EditCredentialsOrRefreshProviderAccountParams) SetProviderAccountRequest(providerAccountRequest *models.ProviderAccountRequest) {
	o.ProviderAccountRequest = providerAccountRequest
}

// WriteToRequest writes these params to a swagger request
func (o *EditCredentialsOrRefreshProviderAccountParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param providerAccountIds
	qrProviderAccountIds := o.ProviderAccountIds
	qProviderAccountIds := qrProviderAccountIds
	if qProviderAccountIds != "" {
		if err := r.SetQueryParam("providerAccountIds", qProviderAccountIds); err != nil {
			return err
		}
	}

	if o.ProviderAccountRequest != nil {
		if err := r.SetBodyParam(o.ProviderAccountRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
