// Code generated by go-swagger; DO NOT EDIT.

package provider_accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetProviderAccountProfilesParams creates a new GetProviderAccountProfilesParams object
// with the default values initialized.
func NewGetProviderAccountProfilesParams() *GetProviderAccountProfilesParams {
	var ()
	return &GetProviderAccountProfilesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetProviderAccountProfilesParamsWithTimeout creates a new GetProviderAccountProfilesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetProviderAccountProfilesParamsWithTimeout(timeout time.Duration) *GetProviderAccountProfilesParams {
	var ()
	return &GetProviderAccountProfilesParams{

		timeout: timeout,
	}
}

// NewGetProviderAccountProfilesParamsWithContext creates a new GetProviderAccountProfilesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetProviderAccountProfilesParamsWithContext(ctx context.Context) *GetProviderAccountProfilesParams {
	var ()
	return &GetProviderAccountProfilesParams{

		Context: ctx,
	}
}

// NewGetProviderAccountProfilesParamsWithHTTPClient creates a new GetProviderAccountProfilesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetProviderAccountProfilesParamsWithHTTPClient(client *http.Client) *GetProviderAccountProfilesParams {
	var ()
	return &GetProviderAccountProfilesParams{
		HTTPClient: client,
	}
}

/*GetProviderAccountProfilesParams contains all the parameters to send to the API endpoint
for the get provider account profiles operation typically these are written to a http.Request
*/
type GetProviderAccountProfilesParams struct {

	/*ProviderAccountID
	  Comma separated providerAccountIds.

	*/
	ProviderAccountID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get provider account profiles params
func (o *GetProviderAccountProfilesParams) WithTimeout(timeout time.Duration) *GetProviderAccountProfilesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get provider account profiles params
func (o *GetProviderAccountProfilesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get provider account profiles params
func (o *GetProviderAccountProfilesParams) WithContext(ctx context.Context) *GetProviderAccountProfilesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get provider account profiles params
func (o *GetProviderAccountProfilesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get provider account profiles params
func (o *GetProviderAccountProfilesParams) WithHTTPClient(client *http.Client) *GetProviderAccountProfilesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get provider account profiles params
func (o *GetProviderAccountProfilesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProviderAccountID adds the providerAccountID to the get provider account profiles params
func (o *GetProviderAccountProfilesParams) WithProviderAccountID(providerAccountID *string) *GetProviderAccountProfilesParams {
	o.SetProviderAccountID(providerAccountID)
	return o
}

// SetProviderAccountID adds the providerAccountId to the get provider account profiles params
func (o *GetProviderAccountProfilesParams) SetProviderAccountID(providerAccountID *string) {
	o.ProviderAccountID = providerAccountID
}

// WriteToRequest writes these params to a swagger request
func (o *GetProviderAccountProfilesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ProviderAccountID != nil {

		// query param providerAccountId
		var qrProviderAccountID string
		if o.ProviderAccountID != nil {
			qrProviderAccountID = *o.ProviderAccountID
		}
		qProviderAccountID := qrProviderAccountID
		if qProviderAccountID != "" {
			if err := r.SetQueryParam("providerAccountId", qProviderAccountID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
