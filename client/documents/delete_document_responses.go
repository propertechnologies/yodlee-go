// Code generated by go-swagger; DO NOT EDIT.

package documents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "yodlee-golang-client/models"
)

// DeleteDocumentReader is a Reader for the DeleteDocument structure.
type DeleteDocumentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDocumentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteDocumentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteDocumentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteDocumentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteDocumentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteDocumentNoContent creates a DeleteDocumentNoContent with default headers values
func NewDeleteDocumentNoContent() *DeleteDocumentNoContent {
	return &DeleteDocumentNoContent{}
}

/*DeleteDocumentNoContent handles this case with default header values.

OK
*/
type DeleteDocumentNoContent struct {
}

func (o *DeleteDocumentNoContent) Error() string {
	return fmt.Sprintf("[DELETE /documents/{documentId}][%d] deleteDocumentNoContent ", 204)
}

func (o *DeleteDocumentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDocumentBadRequest creates a DeleteDocumentBadRequest with default headers values
func NewDeleteDocumentBadRequest() *DeleteDocumentBadRequest {
	return &DeleteDocumentBadRequest{}
}

/*DeleteDocumentBadRequest handles this case with default header values.

Y800 : Invalid value for documentID
*/
type DeleteDocumentBadRequest struct {
	Payload *models.YodleeError
}

func (o *DeleteDocumentBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /documents/{documentId}][%d] deleteDocumentBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteDocumentBadRequest) GetPayload() *models.YodleeError {
	return o.Payload
}

func (o *DeleteDocumentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.YodleeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDocumentUnauthorized creates a DeleteDocumentUnauthorized with default headers values
func NewDeleteDocumentUnauthorized() *DeleteDocumentUnauthorized {
	return &DeleteDocumentUnauthorized{}
}

/*DeleteDocumentUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteDocumentUnauthorized struct {
}

func (o *DeleteDocumentUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /documents/{documentId}][%d] deleteDocumentUnauthorized ", 401)
}

func (o *DeleteDocumentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDocumentNotFound creates a DeleteDocumentNotFound with default headers values
func NewDeleteDocumentNotFound() *DeleteDocumentNotFound {
	return &DeleteDocumentNotFound{}
}

/*DeleteDocumentNotFound handles this case with default header values.

Not Found
*/
type DeleteDocumentNotFound struct {
}

func (o *DeleteDocumentNotFound) Error() string {
	return fmt.Sprintf("[DELETE /documents/{documentId}][%d] deleteDocumentNotFound ", 404)
}

func (o *DeleteDocumentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
