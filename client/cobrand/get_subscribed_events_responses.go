// Code generated by go-swagger; DO NOT EDIT.

package cobrand

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "yodlee-golang-client/models"
)

// GetSubscribedEventsReader is a Reader for the GetSubscribedEvents structure.
type GetSubscribedEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSubscribedEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSubscribedEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSubscribedEventsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSubscribedEventsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSubscribedEventsOK creates a GetSubscribedEventsOK with default headers values
func NewGetSubscribedEventsOK() *GetSubscribedEventsOK {
	return &GetSubscribedEventsOK{}
}

/*GetSubscribedEventsOK handles this case with default header values.

OK
*/
type GetSubscribedEventsOK struct {
	Payload *models.CobrandNotificationResponse
}

func (o *GetSubscribedEventsOK) Error() string {
	return fmt.Sprintf("[GET /cobrand/config/notifications/events][%d] getSubscribedEventsOK  %+v", 200, o.Payload)
}

func (o *GetSubscribedEventsOK) GetPayload() *models.CobrandNotificationResponse {
	return o.Payload
}

func (o *GetSubscribedEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CobrandNotificationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubscribedEventsUnauthorized creates a GetSubscribedEventsUnauthorized with default headers values
func NewGetSubscribedEventsUnauthorized() *GetSubscribedEventsUnauthorized {
	return &GetSubscribedEventsUnauthorized{}
}

/*GetSubscribedEventsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetSubscribedEventsUnauthorized struct {
}

func (o *GetSubscribedEventsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cobrand/config/notifications/events][%d] getSubscribedEventsUnauthorized ", 401)
}

func (o *GetSubscribedEventsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSubscribedEventsNotFound creates a GetSubscribedEventsNotFound with default headers values
func NewGetSubscribedEventsNotFound() *GetSubscribedEventsNotFound {
	return &GetSubscribedEventsNotFound{}
}

/*GetSubscribedEventsNotFound handles this case with default header values.

Not Found
*/
type GetSubscribedEventsNotFound struct {
}

func (o *GetSubscribedEventsNotFound) Error() string {
	return fmt.Sprintf("[GET /cobrand/config/notifications/events][%d] getSubscribedEventsNotFound ", 404)
}

func (o *GetSubscribedEventsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
