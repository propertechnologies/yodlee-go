// Code generated by go-swagger; DO NOT EDIT.

package cobrand

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "yodlee-golang-client/models"
)

// NewCobrandLoginParams creates a new CobrandLoginParams object
// with the default values initialized.
func NewCobrandLoginParams() *CobrandLoginParams {
	var ()
	return &CobrandLoginParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCobrandLoginParamsWithTimeout creates a new CobrandLoginParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCobrandLoginParamsWithTimeout(timeout time.Duration) *CobrandLoginParams {
	var ()
	return &CobrandLoginParams{

		timeout: timeout,
	}
}

// NewCobrandLoginParamsWithContext creates a new CobrandLoginParams object
// with the default values initialized, and the ability to set a context for a request
func NewCobrandLoginParamsWithContext(ctx context.Context) *CobrandLoginParams {
	var ()
	return &CobrandLoginParams{

		Context: ctx,
	}
}

// NewCobrandLoginParamsWithHTTPClient creates a new CobrandLoginParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCobrandLoginParamsWithHTTPClient(client *http.Client) *CobrandLoginParams {
	var ()
	return &CobrandLoginParams{
		HTTPClient: client,
	}
}

/*CobrandLoginParams contains all the parameters to send to the API endpoint
for the cobrand login operation typically these are written to a http.Request
*/
type CobrandLoginParams struct {

	/*CobrandLoginRequest
	  cobrandLoginRequest

	*/
	CobrandLoginRequest *models.CobrandLoginRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the cobrand login params
func (o *CobrandLoginParams) WithTimeout(timeout time.Duration) *CobrandLoginParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the cobrand login params
func (o *CobrandLoginParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the cobrand login params
func (o *CobrandLoginParams) WithContext(ctx context.Context) *CobrandLoginParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the cobrand login params
func (o *CobrandLoginParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the cobrand login params
func (o *CobrandLoginParams) WithHTTPClient(client *http.Client) *CobrandLoginParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the cobrand login params
func (o *CobrandLoginParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCobrandLoginRequest adds the cobrandLoginRequest to the cobrand login params
func (o *CobrandLoginParams) WithCobrandLoginRequest(cobrandLoginRequest *models.CobrandLoginRequest) *CobrandLoginParams {
	o.SetCobrandLoginRequest(cobrandLoginRequest)
	return o
}

// SetCobrandLoginRequest adds the cobrandLoginRequest to the cobrand login params
func (o *CobrandLoginParams) SetCobrandLoginRequest(cobrandLoginRequest *models.CobrandLoginRequest) {
	o.CobrandLoginRequest = cobrandLoginRequest
}

// WriteToRequest writes these params to a swagger request
func (o *CobrandLoginParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CobrandLoginRequest != nil {
		if err := r.SetBodyParam(o.CobrandLoginRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
