// Code generated by go-swagger; DO NOT EDIT.

package cobrand

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "yodlee-golang-client/models"
)

// CobrandLoginReader is a Reader for the CobrandLogin structure.
type CobrandLoginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CobrandLoginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCobrandLoginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCobrandLoginBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCobrandLoginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCobrandLoginNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCobrandLoginOK creates a CobrandLoginOK with default headers values
func NewCobrandLoginOK() *CobrandLoginOK {
	return &CobrandLoginOK{}
}

/*CobrandLoginOK handles this case with default header values.

OK
*/
type CobrandLoginOK struct {
	Payload *models.CobrandLoginResponse
}

func (o *CobrandLoginOK) Error() string {
	return fmt.Sprintf("[POST /cobrand/login][%d] cobrandLoginOK  %+v", 200, o.Payload)
}

func (o *CobrandLoginOK) GetPayload() *models.CobrandLoginResponse {
	return o.Payload
}

func (o *CobrandLoginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CobrandLoginResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCobrandLoginBadRequest creates a CobrandLoginBadRequest with default headers values
func NewCobrandLoginBadRequest() *CobrandLoginBadRequest {
	return &CobrandLoginBadRequest{}
}

/*CobrandLoginBadRequest handles this case with default header values.

Y800 : Invalid value for cobrandParam
*/
type CobrandLoginBadRequest struct {
	Payload *models.YodleeError
}

func (o *CobrandLoginBadRequest) Error() string {
	return fmt.Sprintf("[POST /cobrand/login][%d] cobrandLoginBadRequest  %+v", 400, o.Payload)
}

func (o *CobrandLoginBadRequest) GetPayload() *models.YodleeError {
	return o.Payload
}

func (o *CobrandLoginBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.YodleeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCobrandLoginUnauthorized creates a CobrandLoginUnauthorized with default headers values
func NewCobrandLoginUnauthorized() *CobrandLoginUnauthorized {
	return &CobrandLoginUnauthorized{}
}

/*CobrandLoginUnauthorized handles this case with default header values.

Y003 : Account is locked, contact Yodlee customer care<br>Y001 : User name and password required
*/
type CobrandLoginUnauthorized struct {
	Payload *models.YodleeError
}

func (o *CobrandLoginUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cobrand/login][%d] cobrandLoginUnauthorized  %+v", 401, o.Payload)
}

func (o *CobrandLoginUnauthorized) GetPayload() *models.YodleeError {
	return o.Payload
}

func (o *CobrandLoginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.YodleeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCobrandLoginNotFound creates a CobrandLoginNotFound with default headers values
func NewCobrandLoginNotFound() *CobrandLoginNotFound {
	return &CobrandLoginNotFound{}
}

/*CobrandLoginNotFound handles this case with default header values.

Not Found
*/
type CobrandLoginNotFound struct {
}

func (o *CobrandLoginNotFound) Error() string {
	return fmt.Sprintf("[POST /cobrand/login][%d] cobrandLoginNotFound ", 404)
}

func (o *CobrandLoginNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
