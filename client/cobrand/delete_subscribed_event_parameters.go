// Code generated by go-swagger; DO NOT EDIT.

package cobrand

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteSubscribedEventParams creates a new DeleteSubscribedEventParams object
// with the default values initialized.
func NewDeleteSubscribedEventParams() *DeleteSubscribedEventParams {
	var ()
	return &DeleteSubscribedEventParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteSubscribedEventParamsWithTimeout creates a new DeleteSubscribedEventParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteSubscribedEventParamsWithTimeout(timeout time.Duration) *DeleteSubscribedEventParams {
	var ()
	return &DeleteSubscribedEventParams{

		timeout: timeout,
	}
}

// NewDeleteSubscribedEventParamsWithContext creates a new DeleteSubscribedEventParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteSubscribedEventParamsWithContext(ctx context.Context) *DeleteSubscribedEventParams {
	var ()
	return &DeleteSubscribedEventParams{

		Context: ctx,
	}
}

// NewDeleteSubscribedEventParamsWithHTTPClient creates a new DeleteSubscribedEventParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteSubscribedEventParamsWithHTTPClient(client *http.Client) *DeleteSubscribedEventParams {
	var ()
	return &DeleteSubscribedEventParams{
		HTTPClient: client,
	}
}

/*DeleteSubscribedEventParams contains all the parameters to send to the API endpoint
for the delete subscribed event operation typically these are written to a http.Request
*/
type DeleteSubscribedEventParams struct {

	/*EventName
	  eventName

	*/
	EventName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete subscribed event params
func (o *DeleteSubscribedEventParams) WithTimeout(timeout time.Duration) *DeleteSubscribedEventParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete subscribed event params
func (o *DeleteSubscribedEventParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete subscribed event params
func (o *DeleteSubscribedEventParams) WithContext(ctx context.Context) *DeleteSubscribedEventParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete subscribed event params
func (o *DeleteSubscribedEventParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete subscribed event params
func (o *DeleteSubscribedEventParams) WithHTTPClient(client *http.Client) *DeleteSubscribedEventParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete subscribed event params
func (o *DeleteSubscribedEventParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEventName adds the eventName to the delete subscribed event params
func (o *DeleteSubscribedEventParams) WithEventName(eventName string) *DeleteSubscribedEventParams {
	o.SetEventName(eventName)
	return o
}

// SetEventName adds the eventName to the delete subscribed event params
func (o *DeleteSubscribedEventParams) SetEventName(eventName string) {
	o.EventName = eventName
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteSubscribedEventParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param eventName
	if err := r.SetPathParam("eventName", o.EventName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
