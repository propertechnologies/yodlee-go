// Code generated by go-swagger; DO NOT EDIT.

package holdings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "yodlee-golang-client/models"
)

// GetSecuritiesReader is a Reader for the GetSecurities structure.
type GetSecuritiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSecuritiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSecuritiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSecuritiesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSecuritiesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSecuritiesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSecuritiesOK creates a GetSecuritiesOK with default headers values
func NewGetSecuritiesOK() *GetSecuritiesOK {
	return &GetSecuritiesOK{}
}

/*GetSecuritiesOK handles this case with default header values.

OK
*/
type GetSecuritiesOK struct {
	Payload *models.HoldingSecuritiesResponse
}

func (o *GetSecuritiesOK) Error() string {
	return fmt.Sprintf("[GET /holdings/securities][%d] getSecuritiesOK  %+v", 200, o.Payload)
}

func (o *GetSecuritiesOK) GetPayload() *models.HoldingSecuritiesResponse {
	return o.Payload
}

func (o *GetSecuritiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HoldingSecuritiesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecuritiesBadRequest creates a GetSecuritiesBadRequest with default headers values
func NewGetSecuritiesBadRequest() *GetSecuritiesBadRequest {
	return &GetSecuritiesBadRequest{}
}

/*GetSecuritiesBadRequest handles this case with default header values.

Y800 : Invalid value for holdingId<br>Y824 : The maximum number of holdingIds permitted is 100
*/
type GetSecuritiesBadRequest struct {
	Payload *models.YodleeError
}

func (o *GetSecuritiesBadRequest) Error() string {
	return fmt.Sprintf("[GET /holdings/securities][%d] getSecuritiesBadRequest  %+v", 400, o.Payload)
}

func (o *GetSecuritiesBadRequest) GetPayload() *models.YodleeError {
	return o.Payload
}

func (o *GetSecuritiesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.YodleeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecuritiesUnauthorized creates a GetSecuritiesUnauthorized with default headers values
func NewGetSecuritiesUnauthorized() *GetSecuritiesUnauthorized {
	return &GetSecuritiesUnauthorized{}
}

/*GetSecuritiesUnauthorized handles this case with default header values.

Unauthorized
*/
type GetSecuritiesUnauthorized struct {
}

func (o *GetSecuritiesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /holdings/securities][%d] getSecuritiesUnauthorized ", 401)
}

func (o *GetSecuritiesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSecuritiesNotFound creates a GetSecuritiesNotFound with default headers values
func NewGetSecuritiesNotFound() *GetSecuritiesNotFound {
	return &GetSecuritiesNotFound{}
}

/*GetSecuritiesNotFound handles this case with default header values.

Not Found
*/
type GetSecuritiesNotFound struct {
}

func (o *GetSecuritiesNotFound) Error() string {
	return fmt.Sprintf("[GET /holdings/securities][%d] getSecuritiesNotFound ", 404)
}

func (o *GetSecuritiesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
