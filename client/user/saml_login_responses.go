// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "yodlee-golang-client/models"
)

// SamlLoginReader is a Reader for the SamlLogin structure.
type SamlLoginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SamlLoginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSamlLoginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSamlLoginBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSamlLoginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSamlLoginNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSamlLoginOK creates a SamlLoginOK with default headers values
func NewSamlLoginOK() *SamlLoginOK {
	return &SamlLoginOK{}
}

/*SamlLoginOK handles this case with default header values.

OK
*/
type SamlLoginOK struct {
	Payload *models.UserResponse
}

func (o *SamlLoginOK) Error() string {
	return fmt.Sprintf("[POST /user/samlLogin][%d] samlLoginOK  %+v", 200, o.Payload)
}

func (o *SamlLoginOK) GetPayload() *models.UserResponse {
	return o.Payload
}

func (o *SamlLoginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSamlLoginBadRequest creates a SamlLoginBadRequest with default headers values
func NewSamlLoginBadRequest() *SamlLoginBadRequest {
	return &SamlLoginBadRequest{}
}

/*SamlLoginBadRequest handles this case with default header values.

Y013 : Invalid value for samlResponse<br>Y013 : Invalid value for issuer<br>Y013 : Invalid value for source<br>
*/
type SamlLoginBadRequest struct {
	Payload *models.YodleeError
}

func (o *SamlLoginBadRequest) Error() string {
	return fmt.Sprintf("[POST /user/samlLogin][%d] samlLoginBadRequest  %+v", 400, o.Payload)
}

func (o *SamlLoginBadRequest) GetPayload() *models.YodleeError {
	return o.Payload
}

func (o *SamlLoginBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.YodleeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSamlLoginUnauthorized creates a SamlLoginUnauthorized with default headers values
func NewSamlLoginUnauthorized() *SamlLoginUnauthorized {
	return &SamlLoginUnauthorized{}
}

/*SamlLoginUnauthorized handles this case with default header values.

Unauthorized
*/
type SamlLoginUnauthorized struct {
}

func (o *SamlLoginUnauthorized) Error() string {
	return fmt.Sprintf("[POST /user/samlLogin][%d] samlLoginUnauthorized ", 401)
}

func (o *SamlLoginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSamlLoginNotFound creates a SamlLoginNotFound with default headers values
func NewSamlLoginNotFound() *SamlLoginNotFound {
	return &SamlLoginNotFound{}
}

/*SamlLoginNotFound handles this case with default header values.

Not Found
*/
type SamlLoginNotFound struct {
}

func (o *SamlLoginNotFound) Error() string {
	return fmt.Sprintf("[POST /user/samlLogin][%d] samlLoginNotFound ", 404)
}

func (o *SamlLoginNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
