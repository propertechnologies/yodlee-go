// Code generated by go-swagger; DO NOT EDIT.

package verification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "yodlee-golang-client/models"
)

// InitiateMatchingOrChallengeDepositeVerificationReader is a Reader for the InitiateMatchingOrChallengeDepositeVerification structure.
type InitiateMatchingOrChallengeDepositeVerificationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InitiateMatchingOrChallengeDepositeVerificationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInitiateMatchingOrChallengeDepositeVerificationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInitiateMatchingOrChallengeDepositeVerificationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInitiateMatchingOrChallengeDepositeVerificationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInitiateMatchingOrChallengeDepositeVerificationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewInitiateMatchingOrChallengeDepositeVerificationOK creates a InitiateMatchingOrChallengeDepositeVerificationOK with default headers values
func NewInitiateMatchingOrChallengeDepositeVerificationOK() *InitiateMatchingOrChallengeDepositeVerificationOK {
	return &InitiateMatchingOrChallengeDepositeVerificationOK{}
}

/*InitiateMatchingOrChallengeDepositeVerificationOK handles this case with default header values.

OK
*/
type InitiateMatchingOrChallengeDepositeVerificationOK struct {
	Payload *models.VerificationResponse
}

func (o *InitiateMatchingOrChallengeDepositeVerificationOK) Error() string {
	return fmt.Sprintf("[POST /verification][%d] initiateMatchingOrChallengeDepositeVerificationOK  %+v", 200, o.Payload)
}

func (o *InitiateMatchingOrChallengeDepositeVerificationOK) GetPayload() *models.VerificationResponse {
	return o.Payload
}

func (o *InitiateMatchingOrChallengeDepositeVerificationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VerificationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInitiateMatchingOrChallengeDepositeVerificationBadRequest creates a InitiateMatchingOrChallengeDepositeVerificationBadRequest with default headers values
func NewInitiateMatchingOrChallengeDepositeVerificationBadRequest() *InitiateMatchingOrChallengeDepositeVerificationBadRequest {
	return &InitiateMatchingOrChallengeDepositeVerificationBadRequest{}
}

/*InitiateMatchingOrChallengeDepositeVerificationBadRequest handles this case with default header values.

Y901 : Service not supported<br>Y812 : Required field/value - verification.verificationType missing in the verificationParam<br>Y812 : Required field/value - accountNumber missing in the verificationParam<br>Y812 : Required field/value - accountType missing in the verificationParam<br>Y812 : Required field/value - bankTransferCode missing in the verificationParam<br>Y812 : Required field/value - bankTransferCode.id missing in the verificationParam<br>Y812 : Required field/value - bankTransferCode.type missing in the verificationParam<br>Y800 : Invalid value for verification.verificationType<br>Y800 : Invalid value for verificationParam<br>Y800 : Invalid value for bankTransferCode.type<br>Y800 : Invalid value for bankTransferCode.id<br>Y800 : Invalid value for accountType<br>Y800 : Invalid value for accountId<br>Y813 : Account details should be provided<br>Y801 : Invalid length for accountNumber<br>Y835 : Account(s) not eligible for Challenge Deposit verification<br>Y806 : Invalid Input<br>Y840 : Verification has been initiated already<br>Y837 : Account has been verified already
*/
type InitiateMatchingOrChallengeDepositeVerificationBadRequest struct {
	Payload *models.YodleeError
}

func (o *InitiateMatchingOrChallengeDepositeVerificationBadRequest) Error() string {
	return fmt.Sprintf("[POST /verification][%d] initiateMatchingOrChallengeDepositeVerificationBadRequest  %+v", 400, o.Payload)
}

func (o *InitiateMatchingOrChallengeDepositeVerificationBadRequest) GetPayload() *models.YodleeError {
	return o.Payload
}

func (o *InitiateMatchingOrChallengeDepositeVerificationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.YodleeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInitiateMatchingOrChallengeDepositeVerificationUnauthorized creates a InitiateMatchingOrChallengeDepositeVerificationUnauthorized with default headers values
func NewInitiateMatchingOrChallengeDepositeVerificationUnauthorized() *InitiateMatchingOrChallengeDepositeVerificationUnauthorized {
	return &InitiateMatchingOrChallengeDepositeVerificationUnauthorized{}
}

/*InitiateMatchingOrChallengeDepositeVerificationUnauthorized handles this case with default header values.

Unauthorized
*/
type InitiateMatchingOrChallengeDepositeVerificationUnauthorized struct {
}

func (o *InitiateMatchingOrChallengeDepositeVerificationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /verification][%d] initiateMatchingOrChallengeDepositeVerificationUnauthorized ", 401)
}

func (o *InitiateMatchingOrChallengeDepositeVerificationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInitiateMatchingOrChallengeDepositeVerificationNotFound creates a InitiateMatchingOrChallengeDepositeVerificationNotFound with default headers values
func NewInitiateMatchingOrChallengeDepositeVerificationNotFound() *InitiateMatchingOrChallengeDepositeVerificationNotFound {
	return &InitiateMatchingOrChallengeDepositeVerificationNotFound{}
}

/*InitiateMatchingOrChallengeDepositeVerificationNotFound handles this case with default header values.

Not Found
*/
type InitiateMatchingOrChallengeDepositeVerificationNotFound struct {
}

func (o *InitiateMatchingOrChallengeDepositeVerificationNotFound) Error() string {
	return fmt.Sprintf("[POST /verification][%d] initiateMatchingOrChallengeDepositeVerificationNotFound ", 404)
}

func (o *InitiateMatchingOrChallengeDepositeVerificationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
