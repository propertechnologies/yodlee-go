// Code generated by go-swagger; DO NOT EDIT.

package verification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetVerificationStatusParams creates a new GetVerificationStatusParams object
// with the default values initialized.
func NewGetVerificationStatusParams() *GetVerificationStatusParams {
	var ()
	return &GetVerificationStatusParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetVerificationStatusParamsWithTimeout creates a new GetVerificationStatusParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetVerificationStatusParamsWithTimeout(timeout time.Duration) *GetVerificationStatusParams {
	var ()
	return &GetVerificationStatusParams{

		timeout: timeout,
	}
}

// NewGetVerificationStatusParamsWithContext creates a new GetVerificationStatusParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetVerificationStatusParamsWithContext(ctx context.Context) *GetVerificationStatusParams {
	var ()
	return &GetVerificationStatusParams{

		Context: ctx,
	}
}

// NewGetVerificationStatusParamsWithHTTPClient creates a new GetVerificationStatusParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetVerificationStatusParamsWithHTTPClient(client *http.Client) *GetVerificationStatusParams {
	var ()
	return &GetVerificationStatusParams{
		HTTPClient: client,
	}
}

/*GetVerificationStatusParams contains all the parameters to send to the API endpoint
for the get verification status operation typically these are written to a http.Request
*/
type GetVerificationStatusParams struct {

	/*AccountID
	  Comma separated accountId

	*/
	AccountID *string
	/*ProviderAccountID
	  Comma separated providerAccountId

	*/
	ProviderAccountID *string
	/*VerificationType
	  verificationType

	*/
	VerificationType *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get verification status params
func (o *GetVerificationStatusParams) WithTimeout(timeout time.Duration) *GetVerificationStatusParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get verification status params
func (o *GetVerificationStatusParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get verification status params
func (o *GetVerificationStatusParams) WithContext(ctx context.Context) *GetVerificationStatusParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get verification status params
func (o *GetVerificationStatusParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get verification status params
func (o *GetVerificationStatusParams) WithHTTPClient(client *http.Client) *GetVerificationStatusParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get verification status params
func (o *GetVerificationStatusParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the get verification status params
func (o *GetVerificationStatusParams) WithAccountID(accountID *string) *GetVerificationStatusParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the get verification status params
func (o *GetVerificationStatusParams) SetAccountID(accountID *string) {
	o.AccountID = accountID
}

// WithProviderAccountID adds the providerAccountID to the get verification status params
func (o *GetVerificationStatusParams) WithProviderAccountID(providerAccountID *string) *GetVerificationStatusParams {
	o.SetProviderAccountID(providerAccountID)
	return o
}

// SetProviderAccountID adds the providerAccountId to the get verification status params
func (o *GetVerificationStatusParams) SetProviderAccountID(providerAccountID *string) {
	o.ProviderAccountID = providerAccountID
}

// WithVerificationType adds the verificationType to the get verification status params
func (o *GetVerificationStatusParams) WithVerificationType(verificationType *string) *GetVerificationStatusParams {
	o.SetVerificationType(verificationType)
	return o
}

// SetVerificationType adds the verificationType to the get verification status params
func (o *GetVerificationStatusParams) SetVerificationType(verificationType *string) {
	o.VerificationType = verificationType
}

// WriteToRequest writes these params to a swagger request
func (o *GetVerificationStatusParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccountID != nil {

		// query param accountId
		var qrAccountID string
		if o.AccountID != nil {
			qrAccountID = *o.AccountID
		}
		qAccountID := qrAccountID
		if qAccountID != "" {
			if err := r.SetQueryParam("accountId", qAccountID); err != nil {
				return err
			}
		}

	}

	if o.ProviderAccountID != nil {

		// query param providerAccountId
		var qrProviderAccountID string
		if o.ProviderAccountID != nil {
			qrProviderAccountID = *o.ProviderAccountID
		}
		qProviderAccountID := qrProviderAccountID
		if qProviderAccountID != "" {
			if err := r.SetQueryParam("providerAccountId", qProviderAccountID); err != nil {
				return err
			}
		}

	}

	if o.VerificationType != nil {

		// query param verificationType
		var qrVerificationType string
		if o.VerificationType != nil {
			qrVerificationType = *o.VerificationType
		}
		qVerificationType := qrVerificationType
		if qVerificationType != "" {
			if err := r.SetQueryParam("verificationType", qVerificationType); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
