// Code generated by go-swagger; DO NOT EDIT.

package statements

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "yodlee-golang-client/models"
)

// GetStatementsReader is a Reader for the GetStatements structure.
type GetStatementsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStatementsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStatementsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetStatementsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetStatementsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetStatementsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetStatementsOK creates a GetStatementsOK with default headers values
func NewGetStatementsOK() *GetStatementsOK {
	return &GetStatementsOK{}
}

/*GetStatementsOK handles this case with default header values.

OK
*/
type GetStatementsOK struct {
	Payload *models.StatementResponse
}

func (o *GetStatementsOK) Error() string {
	return fmt.Sprintf("[GET /statements][%d] getStatementsOK  %+v", 200, o.Payload)
}

func (o *GetStatementsOK) GetPayload() *models.StatementResponse {
	return o.Payload
}

func (o *GetStatementsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StatementResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStatementsBadRequest creates a GetStatementsBadRequest with default headers values
func NewGetStatementsBadRequest() *GetStatementsBadRequest {
	return &GetStatementsBadRequest{}
}

/*GetStatementsBadRequest handles this case with default header values.

Y800 : Invalid value for accountId<br>Y800 : Invalid value for status<br>Y805 : Multiple containers not supported<br>Y800 : Invalid value for container<br>Y800 : Invalid value for isLatest<br>Y800 : Invalid value for fromDate<br>
*/
type GetStatementsBadRequest struct {
	Payload *models.YodleeError
}

func (o *GetStatementsBadRequest) Error() string {
	return fmt.Sprintf("[GET /statements][%d] getStatementsBadRequest  %+v", 400, o.Payload)
}

func (o *GetStatementsBadRequest) GetPayload() *models.YodleeError {
	return o.Payload
}

func (o *GetStatementsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.YodleeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStatementsUnauthorized creates a GetStatementsUnauthorized with default headers values
func NewGetStatementsUnauthorized() *GetStatementsUnauthorized {
	return &GetStatementsUnauthorized{}
}

/*GetStatementsUnauthorized handles this case with default header values.

Unauthorized
*/
type GetStatementsUnauthorized struct {
}

func (o *GetStatementsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /statements][%d] getStatementsUnauthorized ", 401)
}

func (o *GetStatementsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStatementsNotFound creates a GetStatementsNotFound with default headers values
func NewGetStatementsNotFound() *GetStatementsNotFound {
	return &GetStatementsNotFound{}
}

/*GetStatementsNotFound handles this case with default header values.

Not Found
*/
type GetStatementsNotFound struct {
}

func (o *GetStatementsNotFound) Error() string {
	return fmt.Sprintf("[GET /statements][%d] getStatementsNotFound ", 404)
}

func (o *GetStatementsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
