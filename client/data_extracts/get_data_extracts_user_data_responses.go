// Code generated by go-swagger; DO NOT EDIT.

package data_extracts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "yodlee-golang-client/models"
)

// GetDataExtractsUserDataReader is a Reader for the GetDataExtractsUserData structure.
type GetDataExtractsUserDataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDataExtractsUserDataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDataExtractsUserDataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDataExtractsUserDataBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDataExtractsUserDataUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDataExtractsUserDataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDataExtractsUserDataOK creates a GetDataExtractsUserDataOK with default headers values
func NewGetDataExtractsUserDataOK() *GetDataExtractsUserDataOK {
	return &GetDataExtractsUserDataOK{}
}

/*GetDataExtractsUserDataOK handles this case with default header values.

OK
*/
type GetDataExtractsUserDataOK struct {
	Payload *models.DataExtractsUserDataResponse
}

func (o *GetDataExtractsUserDataOK) Error() string {
	return fmt.Sprintf("[GET /dataExtracts/userData][%d] getDataExtractsUserDataOK  %+v", 200, o.Payload)
}

func (o *GetDataExtractsUserDataOK) GetPayload() *models.DataExtractsUserDataResponse {
	return o.Payload
}

func (o *GetDataExtractsUserDataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataExtractsUserDataResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataExtractsUserDataBadRequest creates a GetDataExtractsUserDataBadRequest with default headers values
func NewGetDataExtractsUserDataBadRequest() *GetDataExtractsUserDataBadRequest {
	return &GetDataExtractsUserDataBadRequest{}
}

/*GetDataExtractsUserDataBadRequest handles this case with default header values.

Y800 : Invalid value for eventName<br>Y821 : Data update event not supported<br>Y800 : Invalid value for fromDate.fromDate cannot be greater than current time<br>Y800 : Invalid value for toDate.toDate cannot be greater than current time<br>.Y800 : Invalid value for fromDate or toDate.fromDate and toDate cannot be older than 7 days<br>Y800 : Invalid value for fromDate.fromDate can not be greater than toDate<br>Y800 : Invalid value for loginName
*/
type GetDataExtractsUserDataBadRequest struct {
	Payload *models.YodleeError
}

func (o *GetDataExtractsUserDataBadRequest) Error() string {
	return fmt.Sprintf("[GET /dataExtracts/userData][%d] getDataExtractsUserDataBadRequest  %+v", 400, o.Payload)
}

func (o *GetDataExtractsUserDataBadRequest) GetPayload() *models.YodleeError {
	return o.Payload
}

func (o *GetDataExtractsUserDataBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.YodleeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataExtractsUserDataUnauthorized creates a GetDataExtractsUserDataUnauthorized with default headers values
func NewGetDataExtractsUserDataUnauthorized() *GetDataExtractsUserDataUnauthorized {
	return &GetDataExtractsUserDataUnauthorized{}
}

/*GetDataExtractsUserDataUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDataExtractsUserDataUnauthorized struct {
}

func (o *GetDataExtractsUserDataUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dataExtracts/userData][%d] getDataExtractsUserDataUnauthorized ", 401)
}

func (o *GetDataExtractsUserDataUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDataExtractsUserDataNotFound creates a GetDataExtractsUserDataNotFound with default headers values
func NewGetDataExtractsUserDataNotFound() *GetDataExtractsUserDataNotFound {
	return &GetDataExtractsUserDataNotFound{}
}

/*GetDataExtractsUserDataNotFound handles this case with default header values.

Not Found
*/
type GetDataExtractsUserDataNotFound struct {
}

func (o *GetDataExtractsUserDataNotFound) Error() string {
	return fmt.Sprintf("[GET /dataExtracts/userData][%d] getDataExtractsUserDataNotFound ", 404)
}

func (o *GetDataExtractsUserDataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
