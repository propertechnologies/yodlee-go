// Code generated by go-swagger; DO NOT EDIT.

package derived

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/propertechnologies/yodlee-go/models"
)

// GetTransactionSummaryReader is a Reader for the GetTransactionSummary structure.
type GetTransactionSummaryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTransactionSummaryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTransactionSummaryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTransactionSummaryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetTransactionSummaryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTransactionSummaryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTransactionSummaryOK creates a GetTransactionSummaryOK with default headers values
func NewGetTransactionSummaryOK() *GetTransactionSummaryOK {
	return &GetTransactionSummaryOK{}
}

/*GetTransactionSummaryOK handles this case with default header values.

OK
*/
type GetTransactionSummaryOK struct {
	Payload *models.DerivedTransactionSummaryResponse
}

func (o *GetTransactionSummaryOK) Error() string {
	return fmt.Sprintf("[GET /derived/transactionSummary][%d] getTransactionSummaryOK  %+v", 200, o.Payload)
}

func (o *GetTransactionSummaryOK) GetPayload() *models.DerivedTransactionSummaryResponse {
	return o.Payload
}

func (o *GetTransactionSummaryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DerivedTransactionSummaryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTransactionSummaryBadRequest creates a GetTransactionSummaryBadRequest with default headers values
func NewGetTransactionSummaryBadRequest() *GetTransactionSummaryBadRequest {
	return &GetTransactionSummaryBadRequest{}
}

/*GetTransactionSummaryBadRequest handles this case with default header values.

Y010 : Invalid session<br>Y800 : Invalid value for accountId<br>Y800 : Invalid value for groupBy<br>Y803 : groupBy required<br>Y803 : categoryType required<br>Y800 : Invalid value for categoryId<br>Y800 : Invalid value for fromDate<br>Y800 : Invalid value for toDate<br>Y800 : Invalid value for fromDate or toDate<br>Y814 : Exchange rate not available for currency<br>Y815 : Cannot apply filter on categoryId if groupBy value is CATEGORY_TYPE<br>Y816 : User-defined category details can only be requested for one system categoryId with groupBy='CATEGORY'<br>Y824 : The maximum number of accountIds permitted is 100<br>Y824 : The maximum number of categoryIds permitted is 100<br>Y824 : The maximum number of categoryTypes permitted is 100
*/
type GetTransactionSummaryBadRequest struct {
	Payload *models.YodleeError
}

func (o *GetTransactionSummaryBadRequest) Error() string {
	return fmt.Sprintf("[GET /derived/transactionSummary][%d] getTransactionSummaryBadRequest  %+v", 400, o.Payload)
}

func (o *GetTransactionSummaryBadRequest) GetPayload() *models.YodleeError {
	return o.Payload
}

func (o *GetTransactionSummaryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.YodleeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTransactionSummaryUnauthorized creates a GetTransactionSummaryUnauthorized with default headers values
func NewGetTransactionSummaryUnauthorized() *GetTransactionSummaryUnauthorized {
	return &GetTransactionSummaryUnauthorized{}
}

/*GetTransactionSummaryUnauthorized handles this case with default header values.

Unauthorized
*/
type GetTransactionSummaryUnauthorized struct {
}

func (o *GetTransactionSummaryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /derived/transactionSummary][%d] getTransactionSummaryUnauthorized ", 401)
}

func (o *GetTransactionSummaryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTransactionSummaryNotFound creates a GetTransactionSummaryNotFound with default headers values
func NewGetTransactionSummaryNotFound() *GetTransactionSummaryNotFound {
	return &GetTransactionSummaryNotFound{}
}

/*GetTransactionSummaryNotFound handles this case with default header values.

Not Found
*/
type GetTransactionSummaryNotFound struct {
}

func (o *GetTransactionSummaryNotFound) Error() string {
	return fmt.Sprintf("[GET /derived/transactionSummary][%d] getTransactionSummaryNotFound ", 404)
}

func (o *GetTransactionSummaryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
